---
import Layout from "@/layouts/Base";
import Keyboard from "@/components/DrawKeyboard.astro";
import Help from "@/components/Help.astro";
---

<Layout meta={{ title: "Draw Keyboard" }}>
  <Fragment slot="header-right">
    <div class="settings-container">
      <div class="settings-toggle">
        <input type="checkbox" id="settingsToggle" class="settings-checkbox visually-hidden" />
        <label for="settingsToggle" class="settings-label control-button" title="Toggle Settings"> ‚öôÔ∏è </label>

        <div class="settings-panel">
          <div class="controls">
            <label for="toggleCase" class="control-item">
              <input type="checkbox" name="change_case" id="toggleCase" class="visually-hidden hidden" />
              <span
                id="text"
                class="control-button case-toggle"
                style="--content: 'A'"
                title="Toggle case"
                role="switch"
                aria-checked="false"
              >
                Aa
              </span>
              <span class="control-label">Toggle Case</span>
            </label>

            <label for="toggleFont" class="control-item">
              <input type="checkbox" name="change_font" id="toggleFont" class="visually-hidden hidden" />
              <span id="font" class="control-button font-toggle" title="Change font" role="switch" aria-checked="false">
                T
              </span>
              <span class="control-label">Change Font</span>
            </label>

            <label for="toggleBg" class="control-item">
              <input type="checkbox" name="change_bg" id="toggleBg" class="visually-hidden hidden" />
              <span class="control-button bg-toggle" title="Toggle background" role="switch" aria-checked="false">
                üé®
              </span>
              <span class="control-label">Toggle Background</span>
            </label>
          </div>
        </div>
      </div>

      <Help
        title="Draw Keyboard"
        description="Draw letters on the keyboard by clicking and dragging through the keys. Use the controls to toggle case, font, and background."
      />
    </div>
  </Fragment>
  <Keyboard />
</Layout>

<style>
  .settings-container {
    position: relative;
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .settings-toggle {
    position: relative;
  }

  .settings-checkbox {
    display: none;
  }

  .settings-label {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2.5rem;
    height: 2.5rem;
    background: var(--control-bg);
    border-radius: 0.25rem;
    border: 2px solid rgba(67, 56, 202, 0.2);
    transition: var(--transition);
    box-shadow: var(--shadow);
    font-size: 1.5rem;
  }

  .settings-panel {
    display: none;
    position: absolute;
    top: 100%;
    right: 0;
    background: white;
    border: 1px solid #ddd;
    border-radius: 0.25rem;
    padding: 0.5rem;
    margin-top: 0.5rem;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    z-index: 10;
    min-width: 12rem;
  }

  .settings-checkbox:checked ~ .settings-panel {
    display: block;
  }

  .controls {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .control-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
  }

  .control-label {
    font-size: 0.875rem;
    color: #333;
  }

  .control-button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 2.5rem;
    height: 2.5rem;
    background: var(--control-bg);
    border-radius: 0.25rem;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    border: 2px solid rgba(67, 56, 202, 0.2);
    transition: var(--transition);
    box-shadow: var(--shadow);
    font-size: 1.5rem;
    color: black;
    font-family: Merriweather;
  }

  .control-button::before {
    content: "";
    position: absolute;
    z-index: 1;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--accent-color);
    transform: scaleX(0);
    transform-origin: 0 50%;
    transition: transform 0.3s ease-out;
    opacity: 0.1;
  }

  .control-button:hover::before {
    transform: scaleX(1);
  }

  .hidden {
    display: none;
  }

  .visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const settingsToggle = document.getElementById("settingsToggle") as HTMLInputElement;
    const settingsPanel = settingsToggle.nextElementSibling!;

    // Close settings panel when clicking outside
    document.addEventListener("click", (event: any) => {
      if (!settingsToggle.contains(event.target) && !settingsPanel.contains(event.target)) {
        settingsToggle.checked = false;
      }
    });

    // Prevent panel from closing when clicking inside
    settingsPanel.addEventListener("click", (event) => {
      event.stopPropagation();
    });
  });
</script>
