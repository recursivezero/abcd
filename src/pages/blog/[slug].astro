---
import CalendarIcon from "@/assets/icons/Calendar.svg";
import UserIcon from "@/assets/icons/User.svg";
import "@/assets/styles/blogs/blog.css";
import "@/assets/styles/page.css";
import Back from "@/components/BackButton.astro";
import { blogSchema } from "@/content.config";
import BaseLayout from "@/layouts/Base";
import { getCollection, getEntry, render } from "astro:content";
export const prerender = true;

export async function getStaticPaths() {
  const blogs = await getCollection("blogs");
  return blogs.map((entry: any) => ({
    params: { slug: entry.id },
    props: { slug: entry.id }
  }));
}

type Props = {
  slug: string;
};

const { slug } = Astro.props;

const entry = await getEntry("blogs", slug);
if (!entry) {
  throw new Error(`Blog post not found: ${slug}`);
}

const validatedData = blogSchema.parse(entry.data);
const { Content } = await render(entry);

if (!Content) {
  throw new Error(`Content could not be rendered for blog`);
}
---

<BaseLayout meta={{ title: "Blog", description: validatedData.description }}>
  <Back />
  <article class="container__blog">
    <header class="blog-post-header">
      <h1 class="blog-title">{validatedData.title}</h1>

      {validatedData.description && <p class="blog-description">{validatedData.description}</p>}

      <div class="blog-post-meta">
        {
          validatedData.author && (
            <span class="meta-item">
              <UserIcon />
              {validatedData.author}
            </span>
          )
        }
        {
          validatedData.publishDate && (
            <span class="meta-item">
              <CalendarIcon />
              <time datetime={validatedData.publishDate.toISOString()}>
                {validatedData.publishDate.toLocaleDateString()}
              </time>
            </span>
          )
        }
      </div>
    </header>

    <div class="markdown-content">
      <Content />
    </div>
  </article>
</BaseLayout>
