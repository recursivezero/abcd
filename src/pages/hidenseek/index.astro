---
import GridGameIcon from "@/assets/icons/game.svg";
import KeyboardGameIcon from "@/assets/icons/keyboard.svg";
import "@/assets/styles/cards/main.css";
import Back from "@/components/Back.astro";
import GameCard from "@/components/GameCard.astro";
import SharePopover from "@/components/ShareButton.astro";
import BaseLayout from "@/layouts/Base";

const meta = {
  title: "Hide and Seek",
  description: "Switch between a hide & seek letter game and a grid."
};

// Define game states
const games = {
  grid: {
    title: "Grid Game",
    description: "Explore an interactive grid-based hide and seek challenge",
    icon: GridGameIcon,
    href: "/hidenseek/grid"
  },
  kbd: {
    title: "Keyboard Game",
    description: "Play a fun letter hiding game using your keyboard",
    icon: KeyboardGameIcon,
    href: "/hidenseek/kbd"
  }
};
---

<BaseLayout meta={meta}>
  <Back />
  <Fragment slot="header-right">
    <SharePopover title={meta.title} description={meta.description} />
  </Fragment>
  <div class="selection-container">
    <div class="header-content">
      <h1 class="selection-title">Select a creative mode</h1>
    </div>
    <div class="selection-buttons-grid">
      {
        Object.entries(games).map(([route, game]) => (
          <GameCard
            cardType={route as "grid" | "kbd"}
            title={game.title}
            description={game.description}
            href={game.href}
          >
            {route === "grid" && <GridGameIcon slot="grid-icon" />}
            {route === "kbd" && <KeyboardGameIcon slot="keyboard-icon" />}
          </GameCard>
        ))
      }
    </div>
  </div>
</BaseLayout>
