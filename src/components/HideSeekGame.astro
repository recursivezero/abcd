---
interface Props {
  letters?: string[];
}
import "@/assets/styles/hidenseek.css";
// Specific letter arrangement
const letterRows = [
  ["A", "B", "C", "D", "E", "F", "G", "H", "I"],
  ["J", "K", "L", "M", "N", "O", "P", "Q"],
  ["R", "S", "T", "U", "V", "W", "X", "Y", "Z"]
];
---

<div class="hide-and-seek-game">
  <!-- Help Button -->
  <button id="help-button" class="help-button">?</button>

  <!-- Instructions Modal -->
  <dialog id="game-instructions" class="instructions-modal">
    <div class="modal-content">
      <h2>Hide & Seek Letter Game</h2>
      <p>Press any alphabet key to reveal or hide letters!</p>
      <button id="close-instructions">Got it!</button>
    </div>
  </dialog>

  <!-- Letter Grid -->
  <main class="letter-grid" id="letter-container">
    {
      letterRows.map((row) => (
        <div class="letter-row">
          {row.map((letter) => (
            <div class="letter-box" data-letter={letter} data-visible="false">
              {letter}
            </div>
          ))}
        </div>
      ))
    }
  </main>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const letterContainer = document.getElementById("letter-container") as HTMLDivElement;
    const dialog = document.getElementById("game-instructions") as HTMLDialogElement;
    const closeButton = document.getElementById("close-instructions") as HTMLButtonElement;
    const helpButton = document.getElementById("help-button") as HTMLButtonElement;

    // Open instructions modal when help button is clicked
    helpButton.addEventListener("click", () => {
      dialog.showModal();
    });

    // Close instructions modal
    closeButton.addEventListener("click", () => {
      dialog.close();
    });

    // Keyboard interaction
    document.addEventListener("keydown", (e) => {
      const pressedKey = e.key.toUpperCase();

      // Find letter box matching pressed key
      const letterBox = letterContainer.querySelector(`.letter-box[data-letter="${pressedKey}"]`);

      if (letterBox) {
        // Toggle visibility
        const isCurrentlyVisible = letterBox.getAttribute("data-visible") === "true";
        letterBox.setAttribute("data-visible", String(!isCurrentlyVisible));
      }
    });
  });
</script>
