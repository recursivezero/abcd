---
import { SocialShare } from "astro-social-share";
import Share from "@/assets/icons/share.svg"
---

<div class="share-button-container">
    <button id="shareTrigger" class="share-trigger-button" aria-label="Share">
        <Share />
    </button>

    <div id="sharePopover" class="share-popover">
        <SocialShare
            description={Astro.props.description || "Check out this amazing page!"}
            title={Astro.props.title || "My Awesome Page"}
        />
        <button id="copyUrlButton" class="share-option-item copy-link-item">
            <svg width="26" height="26" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM19 21H8V7H19V21Z" fill="currentColor"/>
            </svg>
            <span>Copy Link</span>
        </button>
    </div>
</div>

<style>
    :root {
        --icon-hover-color: #172fda;
    }

    .share-button-container {
        position: relative;
        display: inline-block;
    }

    .share-trigger-button {
        background-color: transparent;
        color: var(--primary);
        padding: 10px;
        width: 50px;
        height: 50px;
        border: 1px solid var(--primary);
        border-radius: 50px;
        cursor: pointer;
        font-size: 16px;
        font-weight: 500;
        transition: background-color 0.2s ease, transform 0.1s ease;
    }

    .share-trigger-button:hover {
        transform: translateY(-2px);
    }

.share-trigger-button svg {
  display: block;
    margin: auto;
    width: 20px;
    height: 20px;
    fill: var(--primary);
    transition: fill 0.2s ease;
}

    .share-popover {
        position: absolute;
        top: 100%;
        right: 0%;
        background-color: #f3e9e9;
        opacity: 0.9;
        border: 1px solid #e0e0e0;
        border-radius: 8px;
        padding: 10px 10px;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.15);
        min-width: 105px;
        margin-top: 8px;

        opacity: 0;
        visibility: hidden;
        transform: scale(0.95);
        transform-origin: top right;
        transition: opacity 0.2s ease-out, visibility 0.2s ease-out, transform 0.2s ease-out;
        pointer-events: none;

        display: flex;
        flex-direction: column;
        align-items: stretch;
    }

    .share-popover.is-open {
        opacity: 1;
        visibility: visible;
        transform: scale(1);
        pointer-events: auto;
    }

    .share-popover :global(.astro-social-share) {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 10px 8px;
        height: auto;
        margin: 0;
        padding: 0;
        background-color: transparent;
        box-shadow: none;
        width: 100%;
    }

    .share-popover :global(.astro-social-share a[href*="medium.com/new-story"]),
    .share-popover :global(.astro-social-share a[href*="news.ycombinator.com/submitlink"]),
    .share-popover :global(.astro-social-share a[href*="threads.net/intent/post"]),
    .share-popover :global(.astro-social-share a[href^="mailto:"]),
    .share-popover :global(.astro-social-share a[href*="bsky.app/intent/compose"])
    {
        display: none !important;
    }

    /* --- CENTERING ICONS --- */
    /* Target the individual share links within the component */
    .share-popover :global(.astro-social-share a) {
        display: flex;
        flex-direction: column;
        padding: 8px 10px;
        box-sizing: border-box;
        text-decoration: none;
        border-radius: 6px;
        transition: background-color 0.2s ease, transform 0.1s ease;
    }

    .share-popover :global(.astro-social-share a[href*="whatsapp://send"]) {
        order: -4;
    }

    .share-popover :global(.astro-social-share a[href*="facebook.com/sharer"]) {
        order: -2;
    }
    .share-popover :global(.astro-social-share a[href*="linkedin.com/shareArticle"]) {
        order: -1;
    }

    .copy-link-item {
        display: flex;
        align-items: center;
        padding: 8px 10px;
        box-sizing: border-box;
        text-decoration: none;
        border-radius: 6px;
        transition: background-color 0.2s ease, transform 0.1s ease;
        cursor: pointer;
        background: none;
        border: none;
        color: #000000;
        width: 100%;
        margin-top: 10px;
    }

    .copy-link-item:hover {
        background-color: #f5f5f5;
        transform: translateY(-1px);
        color: var(--icon-hover-color);
    }

    .copy-link-item svg {
        width: 26px;
        height: 26px;
        fill: #000000;
        margin-right: 10px;
        transition: fill 0.2s ease;
    }

    .copy-link-item:hover svg {
        fill: var(--icon-hover-color);

    .copy-link-item span {
        font-size: 14px;
        font-weight: 500;
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const shareTrigger = document.getElementById('shareTrigger')! as HTMLButtonElement;
        const sharePopover = document.getElementById('sharePopover')! as HTMLDivElement;
        const copyUrlButton = document.getElementById('copyUrlButton')! as HTMLButtonElement;

        function togglePopover() {
            sharePopover.classList.toggle('is-open');
            const isExpanded = sharePopover.classList.contains('is-open');
            shareTrigger.setAttribute('aria-expanded', String(isExpanded));
        }

        shareTrigger.addEventListener('click', (event) => {
            event.stopPropagation();
            togglePopover();
        });

        document.addEventListener('click', (event) => {
            if (event.target instanceof Element) {
                if (!sharePopover.contains(event.target) && event.target !== shareTrigger) {
                    if (sharePopover.classList.contains('is-open')) {
                        togglePopover();
                    }
                }
            }
        });

        copyUrlButton.addEventListener('click', async () => {
            const currentUrl = window.location.href;
            try {
                await navigator.clipboard.writeText(currentUrl);
                const originalText = copyUrlButton.querySelector('span')!.textContent;
                copyUrlButton.querySelector('span')!.textContent = 'Copied!';
                setTimeout(() => {
                    copyUrlButton.querySelector('span')!.textContent = originalText;
                }, 1500);

                togglePopover();
            } catch (err) {
                console.error('Failed to copy URL: ', err);
                alert('Failed to copy URL. Please copy it manually: ' + currentUrl);
            }
        });
        shareTrigger.setAttribute('aria-expanded', 'false');
    });
</script>