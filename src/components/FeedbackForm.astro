---
import "@/assets/styles/feedback.css";
---

<div class="container__feed">
  <div class="form-wrapper">
    <div class="form-header">
      <h2>Share Your Feedback</h2>
      <p>We value your thoughts and suggestions</p>
    </div>

    <form id="feedbackForm">
      <div id="errorMessage" class="error-message" aria-live="polite">Error message goes here</div>

      <div class="form-group">
        <label for="name">Name</label>
        <input type="text" id="name" name="name" required minlength="2" placeholder="Your name" />
      </div>

      <div class="form-group">
        <label for="feedback">Feedback</label>
        <textarea id="feedback" name="feedback" rows="4" required minlength="10" placeholder="Share your thoughts..."
        ></textarea>
      </div>

      <div class="button-container">
        <button type="submit" id="submitButton">Submit Feedback</button>
      </div>
    </form>
  </div>
</div>

<script>
  const form = document.getElementById("feedbackForm") as HTMLFormElement;
  const errorDiv = document.getElementById("errorMessage") as HTMLDivElement;
  const submitButton = document.getElementById("submitButton") as HTMLButtonElement;

  function showError(message: string) {
    errorDiv.textContent = message;
    errorDiv.style.display = "block";
  }

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    errorDiv.style.display = "none";

    const formData = new FormData(form);
    const userName = formData.get("name") as string;
    const feedback = formData.get("feedback") as string;

    console.log({ formData, userName, feedback });

    console.log(formData.entries());

    // Client-side validation
    if (userName.trim().length < 2) {
      showError("Name must be at least 2 characters long.");
      return;
    }
    if (feedback.trim().length < 10) {
      showError("Feedback must be at least 10 characters long.");
      return;
    }

    submitButton.disabled = true;
    submitButton.textContent = "Submitting...";

    try {
      const response = await fetch("/api/feedback", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(Object.fromEntries(formData))
      });

      if (response.ok) {
        window.location.href = "/feedback";
      } else {
        const data = await response.json();
        showError(data.error || "Failed to submit feedback.");
      }
    } catch (error) {
      console.error(error);
      showError("An unexpected error occurred. Please try again.");
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = "Submit Feedback";
    }
  });
</script>
