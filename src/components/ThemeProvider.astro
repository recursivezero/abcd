<script is:inline>
  const getSystemPreference = () => {
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  };

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      const stored = localStorage.getItem("theme");
      if (stored === "dark" || stored === "light" || stored === "system") return stored;
    }
    return "system";
  };

  function setTheme(theme) {
    if (!["light", "dark", "system"].includes(theme)) return;

    document.documentElement.dataset.theme = theme;

    // Apply the actual theme
    const actualTheme = theme === "system" ? getSystemPreference() : theme;
    document.documentElement.classList.toggle("dark", actualTheme === "dark");

    const meta = document.querySelector("meta[name='theme-color']");
    const bg = getComputedStyle(document.body).getPropertyValue("--theme-bg");
    meta?.setAttribute("content", `hsl(${bg || "0, 0%, 100%"})`);

    localStorage.setItem("theme", theme);
  }

  // Initial load
  setTheme(getThemePreference());

  // Listen to global theme-change events
  document.addEventListener("theme-change", (e) => {
    setTheme(e.detail.theme);
  });

  // Listen for system theme changes
  window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", () => {
    const currentTheme = getThemePreference();
    if (currentTheme === "system") {
      setTheme("system");
    }
  });
</script>
