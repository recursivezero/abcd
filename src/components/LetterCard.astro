---
type data = {
  id: number;
  letter: string;
  code: number;
  text: string;
  description: string;
};
type Props = {
  item: data;
};
const { item } = Astro.props;
---

<div class="letter">
  <div class="letter-header">
    <div class="code-badge">
      <span class="code" title="ASCII Code">#{item.code}</span>
    </div>
    <p class="character">{item.letter}</p>
  </div>
  <div class="letter__content">
    <h2 class="text">{item.text}</h2>
    <p class="description">{item.description}</p>
  </div>
  <div class="card__glow"></div>
</div>

<style>
  :root[data-theme="light"] {
    --character-gradient-start: var(--primary);
    --character-gradient-end: var(--primary-light);
    --character-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  }

  :root[data-theme="dark"] {
    --character-gradient-start: hsl(48, 100%, 75%);
    --character-gradient-end: hsl(48, 100%, 85%);
    --character-shadow: 0 0 20px hsla(48, 100%, 75%, 0.2);
  }

  @media (prefers-color-scheme: dark) {
    :root:not([data-theme="light"]) {
      --character-gradient-start: hsl(48, 100%, 75%);
      --character-gradient-end: hsl(48, 100%, 85%);
      --character-shadow: 0 0 20px hsla(48, 100%, 75%, 0.2);
    }
  }

  @media (prefers-color-scheme: light) {
    :root:not([data-theme="dark"]) {
      --character-gradient-start: var(--primary);
      --character-gradient-end: var(--primary-light);
      --character-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    }
  }
  .letter {
    background: linear-gradient(145deg, var(--background), color-mix(in srgb, var(--background) 97%, var(--text) 3%));
    border-radius: 1.25rem;
    padding: 1.75rem;
    box-shadow:
      0 4px 15px rgba(0, 0, 0, 0.05),
      0 1px 2px rgba(0, 0, 0, 0.1);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    position: relative;
    overflow: hidden;
    border: 1px solid var(--border);
    backdrop-filter: blur(10px);
  }

  .letter:hover {
    transform: translateY(-5px) scale(1.02);
    box-shadow:
      0 20px 30px rgba(0, 0, 0, 0.1),
      0 0 0 1px rgba(59, 130, 246, 0.1);
  }

  .letter-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    position: relative;
  }

  .code-badge {
    position: absolute;
    top: -0.5rem;
    right: -0.5rem;
    z-index: 1;
  }

  .code {
    font-size: 0.875rem;
    color: var(--secondary);
    padding: 0.35rem 0.75rem;
    background: color-mix(in srgb, var(--background) 97%, var(--text) 3%);
    border-radius: 2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    border: 1px solid var(--border);
  }

  .code:hover {
    background: var(--primary);
    color: var(--text);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .character {
    font-size: clamp(3rem, 6vw, 5rem);
    font-weight: 800;
    margin: 0;
    line-height: 1;
    background: linear-gradient(
      135deg,
      var(--character-gradient-start, var(--primary)) 0%,
      var(--character-gradient-end, var(--primary-light)) 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: var(--character-shadow);
  }

  .letter__content {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    position: relative;
    z-index: 1;
  }

  .text {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text);
    margin: 0;
    transition: color 0.3s ease;
  }

  .description {
    font-size: 0.925rem;
    color: var(--secondary);
    margin: 0;
    line-height: 1.6;
    opacity: 0.9;
  }

  .card__glow {
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      color-mix(in srgb, var(--primary) 10%, transparent) 0%,
      transparent 60%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .letter:hover .card__glow {
    opacity: 1;
  }

  .letter:hover .text {
    background: linear-gradient(135deg, var(--primary), var(--primary-light));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }

  @media (max-width: 768px) {
    .letter {
      padding: 1.25rem;
    }

    .character {
      font-size: 2.5rem;
    }

    .text {
      font-size: 1.25rem;
    }

    .description {
      font-size: 0.875rem;
    }
  }
</style>

<script>
  const letters = document.querySelectorAll(".letter");
  letters.forEach((letter) => {
    letter.addEventListener("mousemove", (e: Event) => {
      const htmlLetter = letter as HTMLElement;
      const rect = htmlLetter.getBoundingClientRect();
      const event = e as MouseEvent;
      const x = ((event.clientX - rect.left) / htmlLetter.clientWidth) * 100;
      const y = ((event.clientY - rect.top) / htmlLetter.clientHeight) * 100;
      htmlLetter.style.setProperty("--mouse-x", `${x}%`);
      htmlLetter.style.setProperty("--mouse-y", `${y}%`);
    });
  });
</script>
